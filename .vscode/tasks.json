{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        
        // the following "fx_task" tasks are intended to be triggered by the
        // corresponding f key. In order for this to work, you must define
        // keybindings like the following, which you should place in vs code's
        // keybindings.json file.: 
        //     { "key": "f4"  ,  "command":  "workbench.action.tasks.runTask"     ,    "args": "f4_task"    }
        { "label": "f4_task",            "dependsOn": ["run_design1_with_debugging"]                           },
        { "label": "f7_task",            "dependsOn": ["run_rpyc_playground"]                                  },
        { "label": "f8_task",            "dependsOn": ["reload_fusion_script_runner_addin_with_keystrokes"]    },
        { "label": "f9_task",            "dependsOn": ["run_script_in_fusion_without_debugging"]               },



        {   "label": "execute_with_python",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${file}\""
        },
        {   "label": "run_rpyc_playground",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${workspaceFolder}${pathSeparator}rpyc_playground.py\""
        },

        {   "label": "reload_fusion_script_runner_addin_with_keystrokes",
            "type":"shell",
            "command": "autohotkey \"${workspaceFolder}${pathSeparator}reload_fusion_addin.ahk\" fusion_script_runner_addin\"",
            "presentation": {
                "reveal": "always",
                "showReuseMessage": false
                }
        },
        {   "label": "monitor_fusion_script_runnner_addin_log",
            "type":"shell",
            "command": "tail -F '${workspaceFolder}${pathSeparator}fusion_script_runner_addin${pathSeparator}fusion_script_runner_addin_log.log'",
            "presentation": {
                "reveal": "always",
                "showReuseMessage": false
                },
            "options": {"shell": {"executable": "C:\\cygwin64\\bin\\bash.exe","args": ["-c"]}},
            "isBackground":true,

        },
        {   "label": "reload_fusion_script_runner_addin_then_monitor_log",
            "dependsOrder": "sequence",
            "dependsOn": [
                "reload_fusion_script_runner_addin_with_keystrokes",
                "monitor_fusion_script_runnner_addin_log"
            ]
        },
        {   "label":"kill_fusion",
            "type":"shell",
            "command": "(tasklist | grep Fusion360.exe) &&  (taskkill /f /t /im Fusion360.exe & sleep 3)  & exit 0",
            "presentation": {
                "reveal": "silent",
                "panel":  "dedicated",
                "showReuseMessage": false,
                "close": true
            }
        },
        
        {   "label":"install_dependencies_in_fusion_bundled_python_environment",
            "detail":"This is to be run manually, in liue of a better way to automatically manage dependencies.",
            "type": "shell",
            "command": "\"${config:neil.pathOfPythonExecutableBundledWithFusion}\"",
            "args":[
                "-m",  "pip",  "install",
                "-r", "${config:neil.pathOfFusionScriptRunnerAddin}${pathSeparator}requirements.txt",
                "-r", "${workspaceFolder}${pathSeparator}requirements.txt",
            ]

        },
        
        {   "label":"run_fusion",
            "type":"shell",
            // "command": "\"${config:neil.pathOfFusionExecutable}\" --nologo",
            "command": "\"${config:neil.pathOfFusionExecutable}\" --nologo --offlineStart",
            // I would like to be a able to trun fusion in such a way that the fusion script runner addin is automatically imported.
            // I would like to be able to run fusion in such a way that the recovery file prompt is suppressed.
            // The --offlineStart switch seems to have no effect.
            "isBackground": true,
            "presentation": {
                "reveal": "silent",
                "panel":  "dedicated",
                "showReuseMessage": false,
                "close": false
            },
            "problemMatcher": {
                // "owner": "typescript",
                
                "fileLocation": "absolute",
               
                // this pattern object is meaningles -- copied from an example in the vscode documentation in order to
                // make vscode accept this problemMatcher as valid.
                "pattern": {
                    "regexp": "^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$",
                    "file": 1,
                    "location": 2,
                    "severity": 3,
                    "code": 4,
                    "message": 5
                  },

                "background":  {
                    "activeOnStart": true,
                    "beginsPattern": "^eeb5c33769fd42f092da745bd4e089fe",
                    // "endsPattern": "^\\s*Remote debugging server started successfully\\. Try pointing a Chromium-based browser to http://127\\.0\\.0\\.1:9766"
                    "endsPattern": "^MAG\\.Default: \\[Idle Status\\] Report Idle\\(Idle or Not\\):  true"
                    // the endsPattern above is a string that happens to emit on stdout towards the end of its startup process.  When vscode sees this string,
                    // it then regards the run_fusion task as finished, for the purpose of task dependency (although, since we have set isBackground to true for
                    // this task, vscode allows fusion to keep running in the abckground.
                }
            }
        },
        
        
        {   "label":"ensure_that_fusion_script_runner_addin_is_installed",
            "type":"shell",
            "command": "echo PLEASE IMPLEMENT ME.",
            // One potential way to install the add-in is to modify the file
            //
            //      "$APPDATA\Autodesk\Autodesk Fusion 360\T2TVKUYMZWD8\JSLoadedScriptsinfo"
            //
            //  The 'T2T...' portion of the preceeding path appears to be random
            // and is probably specific to either the Autodesk user that is
            // logged in to Fusion or to the version of fusion.
            "presentation": {
                "reveal": "silent",
                "panel":  "dedicated",
                "close": true
            },
        },

        
        {   "label":"run_fusion_and_ensure_that_fusion_script_runner_addin_is_installed",
            "dependsOn": [
                "ensure_that_fusion_script_runner_addin_is_installed",
                "run_fusion"
            ],
            "dependsOrder": "sequence",
            "isBackground": true
        },


        
        
        
        // {   "label":"ensure_that_fusion_is_running",

        // }
        
        {   "label":"run_fusion_with_debugpy_log_dir_defined",
            "type":"shell",
            "command": "\"${config:neil.pathOfFusionExecutable}\" --nologo",
            "presentation": {
                "reveal": "silent",
                "panel":  "dedicated",
                "showReuseMessage": false,
                "close": false
            },
            "options": {
                "env": {
                    "DEBUGPY_LOG_DIR":"C:/work/fusion_programmatic_experiment/debugpy_log"
                }
            }
        },
        {   "label":"restart_fusion",
            "dependsOn":["kill_fusion", "run_fusion_and_ensure_that_fusion_script_runner_addin_is_installed"],
            "dependsOrder": "sequence"
        },
        {   "label":"restart_fusion_with_debugpy_log_dir_defined",
            "dependsOn":["kill_fusion", "run_fusion_with_debugpy_log_dir_defined"],
            "dependsOrder": "sequence"
        },
        // {
        //     "label":"restart_fusion_with_debugpy_log_dir_defined",
        //     "type":"shell",
        //     "command": "taskkill /f /t /im Fusion360.exe & (set \"DEBUGPY_LOG_DIR=C:/work/fusion_programmatic_experiment/debugpy_log\" && start \"\" \"${config:neil.pathOfFusionExecutable}\" --nologo)",
        //     "presentation": {"reveal": "silent"}            
        // },
        {   "label":"monitor_the_log",
            "type":"shell",
            "command": "tail -F \"${env:TEMP}${pathSeparator}fusion_script_runner_addin_log.log\"",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel":  "dedicated",
                "showReuseMessage": false,
                "clear": false
            },
            "isBackground": true
        },
        {   "label":"run_script_in_fusion_without_debugging",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${config:neil.pathOfPythonScriptToRunScriptInFusion}\"",
            "args":[
                "--script", "${file}",
                "--debug", "0",
                "--debugpy_path", "${config:neil.debugpyPath}",
                // "--use_vscode_debugpy", "true",
                "--addin_port", "19812",
                "--debug_port", "9000"
            ]
        },
        {   "label":"run_script_in_fusion_with_debugging",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${config:neil.pathOfPythonScriptToRunScriptInFusion}\"",
            "args":[
                "--script", "${file}",
                "--debug", "1",
                "--debugpy_path", "${config:neil.debugpyPath}",
                // "--use_vscode_debugpy", "true",
                "--addin_port", "19812",
                "--debug_port", "9000"
            ]
        },
        {   "label":"run_test_script_in_fusion_without_debugging",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${config:neil.pathOfPythonScriptToRunScriptInFusion}\"",
            "args":[
                "--script", "${workspaceFolder}${pathSeparator}test_scripts${pathSeparator}arbitrary_script_1${pathSeparator}arbitrary_script_1.py",
                "--debug", "0",
                "--debugpy_path", "${config:neil.debugpyPath}",
                // "--use_vscode_debugpy", "true",
                "--addin_port", "19812",
                "--debug_port", "9000"
            ]
        },
        {   "label":"run_test_script_in_fusion_with_debugging",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${config:neil.pathOfPythonScriptToRunScriptInFusion}\"",
            "args":[
                "--script", "${workspaceFolder}${pathSeparator}test_scripts${pathSeparator}arbitrary_script_1${pathSeparator}arbitrary_script_1.py",
                "--debug", "1",
                "--debugpy_path", "${config:neil.debugpyPath}",
                // "--use_vscode_debugpy", "true",
                "--addin_port", "19812",
                "--debug_port", "9000"
            ]
        },
        {   "label":"run_design1_with_debugging",
            "type":"shell",
            "command": "${config:python.pythonPath} \"${config:neil.pathOfPythonScriptToRunScriptInFusion}\"",
            "dependsOn": ["run_fusion_and_ensure_that_fusion_script_runner_addin_is_installed"] ,
            // "dependsOrder": "parallel",
            "args":[
                "--script"                                  , "${workspaceFolder}${pathSeparator}design1.py"   ,                                                 
                "--debug"                                   , "1"                                              ,      
                "--debugpy_path"                            , "${config:neil.debugpyPath}"                     ,                               
                //"--use_vscode_debugpy"                      , "true"                                           ,
                "--addin_port"                              , "19812"                                          ,          
                "--debug_port"                              , "9000"                                           ,         
                "--prefix_of_submodule_not_to_be_reloaded"  , "braids.fscad"                                   ,                 
            ],
            "presentation": {
                "reveal" : "silent" ,
                "panel": "shared"
            }
        },
        {   "label":"python_interactive",
            "type":"shell",
            "command": "${config:python.pythonPath}"
        },
        {
            "label":"make_vscode_settings_file",
            "detail": "",
            // Programmatically determines the path of the fusion executable and
            // the path of the debugpy executable (both of which tend to change
            // as a result of fusion and vscode, respectively, automatically
            // updating themselves), and inject these paths in the appropriate
            // place in the vscode settings file.
            "command": "python", "args":["${workspaceFolder}${pathSeparator}.vscode${pathSeparator}make_vscode_settings_file.py"],
            "runOptions":{
                "runOn": "folderOpen"
            }
        },
        {   "label":"hello_world",
            "type":"shell",
            // "command": "echo ${config:python.pythonPath}",
            // "command": "echo ${config:python.analysis.symbolsHierarchyDepthLimit}",
            // "command": "echo here it is ${config:python.analysis}",
            "command": "echo here it is \"${config:neil.debugpyPath}\" \"${config:neil.pathOfFusionInstallDirectory}\"",
            // "command": "echo here it is ${config:neil.pathOfFusionInstallDirectory}",
            // "command": "echo here it is ${config:neil.x}",
            // "command": "echo here it is ${config:python.autoComplete.extraPaths}",
            // "command": "echo here it is ${config:python.autoComplete.extraPaths}",
            // "command": "echo here it is $(${config:python.pythonPath} \"${workspaceFolder}${pathSeparator}fusion_script_runner_addin${pathSeparator}get_vscode_debugpy_path.py\")",
            // "command": "echo here it is ${command:extensions.getExtension} ",
            // "command": "echo here it is ${config:python.extensionPath} ",
            // "command": "echo here it is ${command:workbench.action.tasks.get_debugpy_path} ",
            // "command": "echo here it is ${execPath}",
            // "command": "echo here it is ${input:debugpy_path}",
            // "command": "echo here it is ${extensions.getExtension(\"python\").extensionPath}",
            // "command": "echo here it is terminal.integrated.shell.windows: ${config:terminal.integrated.shell.windows}",
            

            "options": {"shell": {"executable": "C:\\cygwin64\\bin\\bash.exe","args": ["-c"]}},
            "presentation": { "panel":  "dedicated"}
        },
        // {   "label":"get_debugpy_path",
        //     "type":"shell",
        //     // "command": "echo ${config:python.pythonPath}",
        //     // "command": "echo ${config:python.analysis.symbolsHierarchyDepthLimit}",
        //     // "command": "echo here it is ${config:python.analysis}",
        //     // "command": "echo here it is ${config:neil.debugpyPath}",
        //     // "command": "echo here it is ${config:neil.x}",
        //     // "command": "echo here it is ${config:python.autoComplete.extraPaths}",
        //     // "command": "echo here it is $(${config:python.pythonPath} \"${workspaceFolder}${pathSeparator}fusion_script_runner_addin${pathSeparator}get_vscode_debugpy_path.py\")",
        //     // "command": "echo here it is ${command:extensions.getExtension} ",
        //     // "command": "echo here it is ${config:python.extensionPath} ",
        //     "command": "${config:python.pythonPath} \"${workspaceFolder}${pathSeparator}fusion_script_runner_addin${pathSeparator}get_vscode_debugpy_path.py\"",
        //     // "command": "echo here it is ${execPath}",
        //     // "command": "echo here it is ${input:debugpy_path}",
        //     // "command": "echo here it is ${extensions.getExtension(\"python\").extensionPath}",
        //     // "command": "echo here it is $(echo ahoy)",

        //     // "options": {"shell": {"executable": "C:\\cygwin64\\bin\\bash.exe","args": ["-c"]}}
        //     "presentation": {"reveal" : "silent" ,  "panel":  "dedicated"}
        // }
    ],
    // "inputs": [
    // //   {
    // //     "id": "terminate",
    // //     "type": "command",
    // //     "command": "workbench.action.tasks.terminate",
    // //     "args": "terminateAll"
    // //   }
    //     {
    //         "id": "debugpy_path",
    //         "type": "command",
    //         // "command": "${config:python.pythonPath} \"${workspaceFolder}${pathSeparator}fusion_script_runner_addin${pathSeparator}get_vscode_debugpy_path.py\""
    //         // "command": "workbench.extensions.getExtension(\"python\").extensionPath"
    //         // "command": "extensions.getExtension",
    //         "command": "workbench.action.tasks.runTask",
            
    //         //"command": "workbench.extensions.search",
    //         "args": "get_debugpy_path"
    //     }
    // ]

}